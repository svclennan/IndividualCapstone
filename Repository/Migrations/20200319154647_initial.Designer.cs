// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository.Data;

namespace Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200319154647_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Repository.Models.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActivityId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("Repository.Models.Mood", b =>
                {
                    b.Property<int>("MoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MoodRating")
                        .HasColumnType("int");

                    b.Property<int>("MoodTrackerId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MoodId");

                    b.HasIndex("MoodTrackerId")
                        .IsUnique();

                    b.ToTable("Moods");
                });

            modelBuilder.Entity("Repository.Models.MoodTracker", b =>
                {
                    b.Property<int>("MoodTrackerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MoodTrackerId");

                    b.ToTable("MoodTrackers");
                });

            modelBuilder.Entity("Repository.Models.PlaylistRating", b =>
                {
                    b.Property<int>("PlaylistRatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MoodTrackerId")
                        .HasColumnType("int");

                    b.Property<string>("PlaylistUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Rating")
                        .HasColumnType("bit");

                    b.HasKey("PlaylistRatingId");

                    b.HasIndex("MoodTrackerId")
                        .IsUnique();

                    b.ToTable("PlaylistRatings");
                });

            modelBuilder.Entity("Repository.Models.Mood", b =>
                {
                    b.HasOne("Repository.Models.MoodTracker", "MoodTracker")
                        .WithOne("Mood")
                        .HasForeignKey("Repository.Models.Mood", "MoodTrackerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Repository.Models.PlaylistRating", b =>
                {
                    b.HasOne("Repository.Models.MoodTracker", "MoodTracker")
                        .WithOne("PlaylistRating")
                        .HasForeignKey("Repository.Models.PlaylistRating", "MoodTrackerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
